name: Terraform Apply and Kubeconfig Setup

on:
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  terraform:
    name: Apply Terraform Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.FLO_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.FLO_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./iac

      - name: Terraform Plan
        run: terraform plan -var="FLO_DB_USERNAME=${{ secrets.FLO_DB_USERNAME }}" -var="FLO_DB_PASSWORD=${{ secrets.FLO_DB_PASSWORD }}"
        working-directory: ./iac

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="FLO_DB_USERNAME=${{ secrets.FLO_DB_USERNAME }}" -var="FLO_DB_PASSWORD=${{ secrets.FLO_DB_PASSWORD }}"
        working-directory: ./iac

      - name: Capture Terraform Outputs
        run: |
          terraform output -raw eks_cluster_name > eks_name.txt
          terraform output -raw eks_cluster_region > eks_region.txt
        working-directory: ./iac

      - name: Install kubectl
        run: |
          KUBECTL_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt)
          echo "Resolved kubectl version: $KUBECTL_VERSION"
          curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update kubeconfig for EKS
        run: |
          CLUSTER_NAME=$(cat ./iac/eks_name.txt)
          CLUSTER_REGION=$(cat ./iac/eks_region.txt)

          aws eks update-kubeconfig \
            --region "$CLUSTER_REGION" \
            --name "$CLUSTER_NAME"

      - name: Validate cluster with kubectl
        run: kubectl get nodes
